{
"name": "github.com/osblinnikov/gernet/test/example",
"gen":["github.com/osblinnikov/gernet/plugins/kernel","github.com/osblinnikov/gernet/plugins/build"],
"args": [{
  "name":"unsignedArr",
  "type":"unsigned[]"
},{
  "name":"parallelBlock",
  "type":"unsigned"
}],
"props":[{
  "name":"longArr",
  "type":"long[]",
  "size":10
}],
"depends":[{
  "name": "github.com/osblinnikov/cnets/mapBuffer"
},{
  "name": "github.com/osblinnikov/cnets/queue"
},{
  "name": "github.com/osblinnikov/cnets/runnablesContainer"
},{
  "name": "github.com/osblinnikov/cnets/readerWriter"
},{
  "name": "github.com/osblinnikov/cnets/types"
}],
"channels": [{
  "channel":"mapBuffer1",
  "name": "github.com/osblinnikov/cnets/mapBuffer",
  "type": "unsigned",
  "args": [{
    "value":"unsignedArr",
    "type":"Object[]"
  },{
    "value": "1000L"
  },{
    "value": 1
  }]
},{
  "channel": "mapBuffer2",
  "name": "github.com/osblinnikov/cnets/mapBuffer",
  "type": "long long",
  "args": [{
    "value":"longArr",
    "type":"Object[]"
  },{
    "value": "1000L"
  },{
    "value": 1
  }]
},{
  "channel": "mapBuffer3Dummy",
  "name": "github.com/osblinnikov/cnets/mapBuffer",
  "type": "long long",
  "args": [{
    "value":"longArr",
    "type":"Object[]"
  },{
    "value": "1000L"
  },{
    "value": 1
  }]
}],
"topology":[{
  "parallel":3,
  "name": "github.com/osblinnikov/gernet/test/block0",
  "args":["10"],
  "emit": [{
    "channel": "mapBuffer1"
  }, {
    "channel": "mapBuffer2"
  }, {
    "channel": "mapBuffer3Dummy"
  }],
  "receive": [{
    "channel": "mapBuffer1"
  }, {
    "channel": "mapBuffer2"
  }]
},{
  "name": "github.com/osblinnikov/gernet/test/block3",
  "receive": [{
    "channel": "mapBuffer1"
  }, {
    "channel": "mapBuffer2"
  }]
},{
  "parallel":"parallelBlock",
  "description": "this meta block should be expanded into the real flat.gernet.json during gernet execution",
  "name": "github.com/osblinnikov/gernet/test/exampleMeta",
  "args": [{
    "value":"unsignedArr",
    "type":"Object[]"
  },{
    "value":"parallelBlock"
  }],
  "emit": [{
    "channel":"mapBuffer1"
  }],
  "receive": [{
    "channel": "mapBuffer1"
  }]
}]
}